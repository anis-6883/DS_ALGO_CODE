#include <bits/stdc++.h>
using namespace std;

vector<int> spiralOrder(vector<vector<int>>& matrix) {
        
	int row = matrix.size();
	int col = matrix[0].size();
	
	int count = 0;
	int total = row * col;
	
	int start_row = 0;
	int start_col = 0;
	int end_row = row - 1;
	int end_col = col - 1;
	vector<int> ans;
	
	while(count < total)
	{
		// print first row
		for(int i = start_col; count < total && i <= end_col; i++)
		{
			ans.push_back(matrix[start_row][i]);
			count++;
		}
			
		start_row++;
		
		// print last column
		for(int i = start_row; count < total && i <= end_row; i++)
		{
			ans.push_back(matrix[i][end_col]);
			count++;
		}
			
		end_col--;
		
		// print last row
		for(int i = end_col; count < total && i >= start_col; i--)
		{
			ans.push_back(matrix[end_row][i]);
			count++;
		}
			
		end_row--;
		
		// print first column
		for(int i = end_row; count < total && i >= start_row; i--)
		{
			ans.push_back(matrix[i][start_col]);
			count++;
		}
			
		start_col++;
	}
	return ans;
}

int main() {
	
	vector<vector<int>> vec = {{5, 10, 15}, {20, 25, 30}, {35, 40, 45}};

	vector<int> ans = spiralOrder(vec);

	for(int x: ans)
		cout << x << " ";
	cout << endl;
		
}

