#include <bits/stdc++.h>
using namespace std;

int firstOccur(vector<int>& arr, int k)
{
	int start = 0;
	int end = arr.size() - 1;
	int mid = start + (end - start) / 2;
	int ans = -1;

	while(start <= end)
    {
		if(arr[mid] == k)
		{
			ans = mid;
			end = mid - 1;
		}
		else if(arr[mid] < k)
			start = mid + 1;
		else
			end = mid - 1;

        mid = start + (end - start) / 2;
	}

	return ans;
}

int lastOccur(vector<int>& arr, int k)
{
	int start = 0;
	int end = arr.size() - 1;
	int mid = start + (end - start) / 2;
	int ans = -1;

	while(start <= end)
    {
		if(arr[mid] == k)
		{
			ans = mid;
			start = mid + 1;
		}
		else if(arr[mid] < k)
			start = mid + 1;
		else
			end = mid - 1;

        mid = start + (end - start) / 2;
	}

	return ans;
}

int main()
{
    vector<int>vec = {1,2,3,3,3,3,3,3,5};

    cout << "First Occurrence index: " << firstOccur(vec, 3) << endl;
    cout << "Last Occurrence index: " << lastOccur(vec, 3) << endl;

    return 0;
}
