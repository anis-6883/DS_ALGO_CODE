#include <iostream>
using namespace std;

struct Node
{
    Node* left;
    int data;
    Node* right;

    Node(int value){
        data = value;
        left = NULL;
        right = NULL;
    }
};
Node* insertionBST(Node*, int);
void inorderTraverse(Node*);

int main()
{
    Node* root = NULL;
    int arr[] = {5, 1, 3, 4, 2, 7};
    int n = sizeof(arr)/sizeof(arr[0]);

    for(int i=0; i<n; i++){
        root = insertionBST(root, arr[i]);
    }

    inorderTraverse(root);
    cout << endl;

    return 0;
}

Node* insertionBST(Node* root, int value){

    if(root == NULL) return new Node(value);

    if(value < root->data) {
        root->left = insertionBST(root->left, value);
    }
    else {
        root->right = insertionBST(root->right, value);
    }

    return root;
}

void inorderTraverse(Node* root){

    if(root == NULL) return;

    inorderTraverse(root->left);
    cout << root->data << " ";
    inorderTraverse(root->right);
}
