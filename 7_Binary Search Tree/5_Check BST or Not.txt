#include <iostream>
using namespace std;

struct Node
{
    Node* left;
    int data;
    Node* right;

    Node(int value){
        data = value;
        left = NULL;
        right = NULL;
    }
};

bool isBST(Node* root, Node* min=NULL, Node* max=NULL)
{
    if(root == NULL) return true;

    if(min != NULL && root->data <= min->data) return false;
    if(max != NULL && root->data >= max->data) return false;

    bool leftValid = isBST(root->left, min, root);
    bool rightValid = isBST(root->right, root, max);

    return leftValid && rightValid;
}

int main()
{
    Node* root = new Node(50);
    root->left = new Node(30);
    root->left->left = new Node(15);
    root->left->right = new Node(35);
    root->right = new Node(60);
    root->right->left = new Node(55);
    root->right->right = new Node(65);

    isBST(root, NULL, NULL) ?
    cout << "Valid BST" << endl:
    cout << "Invalid BST" << endl;


    return 0;
}