// Bubble Sort
// 1. Compare between two element
// 2. Then swap it if first element is greater than second
// 3. Store Big element at last position in each iteration


#include <bits/stdc++.h>
using namespace std;

int main() {
	
	vector<int> vec = {5, 3, 11, 4, 2, 8};

	// Time Complexity: O(n^2)

	// for(int i=1; i<vec.size(); i++)
	// {
	// 	for(int j=0; j<vec.size()-i; j++)
	// 	{
	// 		if(vec[j] > vec[j+1])
	// 			swap(vec[j], vec[j+1]);
	// 	}
	// }

	// for(int i=0; i<vec.size()-1; i++)
	// {
	// 	for(int j=0; j<vec.size()-i-1; j++)
	// 	{
	// 		if(vec[j] > vec[j+1])
	// 		{
	// 			swap(vec[j], vec[j+1]);
	// 		}
	// 	}
	// }

	// Optimization: Time Complexity: O(n)
	
	for(int i=1; i<vec.size(); i++)
	{
		bool swapped = false;
		for(int j=0; j<vec.size()-i; j++)
		{
			if(vec[j] > vec[j+1])
			{
				swap(vec[j], vec[j+1]);
				swapped = true;
			}
		}
		if(!swapped) break;
	}

	for(int x: vec)
		cout << x << " ";
	
	return 0;
}