#include <bits/stdc++.h>
using namespace std;

class Node{

	public:
		int data;
		Node* next;

	Node(int data){
		this -> data = data;
		this -> next = NULL;
	}

};

int getLength(Node* &head){
	int len = 0;
	Node* temp = head;

	while(temp != NULL){
		temp = temp -> next;
		len++;
	}
	return len;
}

void insertAtHead(Node* &head, int d){
	
	Node* new_node = new Node(d);
	new_node -> next = head;
	head = new_node;
	
}

void insertAtTail(Node* &tail, int d){
	
	Node* new_node = new Node(d);
	tail -> next = new_node;
	tail = new_node;
	
}

void insertAtPosition(Node* &head, Node* &tail, int pos, int d){

	// insert at head
	if(pos == 1){
		insertAtHead(head, d);
		return;
	}

	Node* temp = head;
	int counter = 1;

	while(counter < pos-1){
		temp = temp -> next;
		counter++;
	}

	// insert at tail
	if(temp -> next == NULL)
	{
		insertAtTail(tail, d);
		return;
	}

	Node* new_node = new Node(d);
	new_node -> next = temp -> next;
	temp -> next = new_node;
}

void deleteAtHead(Node* &head){
	Node* temp = head;
	head = head -> next;
	delete temp; // memory free
}

void deleteAtTail(Node* &head, Node* &tail){
	
	Node* temp = head;
	Node* prev = NULL;

	while(temp -> next != NULL){
		prev = temp;
		temp = temp -> next;
	}

	prev -> next = NULL;
	tail = prev;
	delete temp;
}

void deleteAtPosition(Node* &head, Node* &tail, int pos){

	// delete at head
	if(pos == 1){
		deleteAtHead(head);
		return;
	}

	Node* prev = NULL;
	Node* curr = head;
	int counter = 1;

	while(counter < pos){
		prev = curr;
		curr = curr -> next;
		counter++;
	}

	// delete at tail
	if(curr -> next == NULL)
		tail = prev;
	
	prev -> next = curr -> next; 
	delete curr;
}

void print(Node* &head){

	Node* temp = head;

	while(temp != NULL){
		cout << temp -> data << " ";
		temp = temp->next;
	}
	cout << endl;
}

int main() {

	Node* new_node = new Node(5);

	Node* head = new_node;
	Node* tail = new_node;
	
	print(head); // 5
	
	insertAtHead(head, 10);
	insertAtHead(head, 30);

	print(head); // 30 10 5
	
	insertAtTail(tail, 10);
	insertAtTail(tail, 70);
	
	print(head); // 30 10 5 10 70

	insertAtPosition(head, tail, 4, 50);
	insertAtPosition(head, tail, 1, 55);
	insertAtPosition(head, tail, 8, 60);

	print(head); // 55 30 10 5 50 10 70 60

	cout << "Head: " << head -> data << endl; // 55
	cout << "Tail: " << tail -> data << endl; // 60

	deleteAtPosition(head, tail, 1);
	print(head); // 30 10 5 50 10 70 60
	deleteAtPosition(head, tail, 4);
	print(head); // 30 10 5 10 70 60
	deleteAtPosition(head, tail, 6);
	print(head); // 30 10 5 10 70

	cout << "Head: " << head -> data << endl; // 30
	cout << "Tail: " << tail -> data << endl; // 70

	deleteAtTail(head, tail);

	cout << "Head: " << head -> data << endl; // 30
	cout << "Tail: " << tail -> data << endl; // 10
	print(head); // 30 10 5 10
	cout << getLength(head) << endl;
}