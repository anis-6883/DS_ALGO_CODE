#include<bits/stdc++.h>
using namespace std;

void addEdge(vector<int> [], int, int);
void bfsTraverse(vector<int> [], int, int);

int main()
{
    int n;
    cout<<"How Many Nodes: ";
    cin>>n;
    vector<int> adj[n];
    int edge;
    cout<<"How many Edges: ";
    cin>>edge;
    for(int i=0; i<edge; i++)
    {
        cout<<"Input the nodes that are connected: ";
        int a,b;
        cin>>a>>b;
        addEdge(adj,a,b);
    }

    int src;
    cout<<"Enter the source node: ";
    cin>>src;

    bfsTraverse(adj,n,src);

    return 0;
}

void addEdge(vector<int> adj[], int a, int b)
{
    adj[a].push_back(b);
    adj[b].push_back(a);
}

void bfsTraverse(vector<int> adj[], int n, int src)
{
    vector<int> visited(n, 0);
    queue<int> q;
    q.push(src);
    visited[src] = 1;

    while(!q.empty())
    {
        int f = q.front();
        q.pop();
        cout<<f<<" ";

        for(auto x: adj[f])
        {
            if(visited[x]==0)
            {
                q.push(x);
                visited[x]=1;
            }
        }
    }
}
