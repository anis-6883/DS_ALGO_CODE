#include <iostream>
using namespace std;

struct Node
{
    Node* left;
    int data;
    Node* right;

    Node(int value){
        data = value;
        left = NULL;
        right = NULL;
    }
};
void preOrderTraverse(Node*);
void inOrderTraverse(Node*);
void postOrderTraverse(Node*);

int main()
{
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->left->right->left = new Node(6);
    root->right->left = new Node(7);
    root->right->right = new Node(8);
    root->right->right->left = new Node(9);
    root->right->right->right = new Node(10);

    cout << "Pre-Order Traverse: ";
    preOrderTraverse(root);
    cout << endl;
    cout << "In-Order Traverse: ";
    inOrderTraverse(root);
    cout << endl;
    cout << "Post-Order Traverse: ";
    postOrderTraverse(root);
    cout << endl;
    return 0;
}

void preOrderTraverse(Node* root){
    if(root == NULL) return;

    cout << root->data << " ";
    preOrderTraverse(root->left);
    preOrderTraverse(root->right);
}

void inOrderTraverse(Node* root){
    if(root == NULL) return;

    inOrderTraverse(root->left);
    cout << root->data << " ";
    inOrderTraverse(root->right);
}

void postOrderTraverse(Node* root){
    if(root == NULL) return;

    postOrderTraverse(root->left);
    postOrderTraverse(root->right);
    cout << root->data << " ";
}